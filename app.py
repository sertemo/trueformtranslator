"""
Copyright 2024 Sergio Tejedor Moreno

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

Script con el c칩digo de la aplicaci칩n principal en Streamlit"""

# librer칤as internas
from io import BytesIO
import time
# librer칤as de terceros (pip install)
from dotenv import load_dotenv
import streamlit as st
# librer칤as del proyecto
from backend.extractor import (extract_xml, 
                                delete_xml_path, 
                                get_text_elements,
                                get_language,
                                get_topic,
                                get_num_words,
                                TopicResponse,
                                )
from streamlit_utils import texto, a침adir_salto, imagen_con_enlace, footer


# Constantes
LISTA_IDIOMAS = {
    'Espa침ol',
    'Franc칠s',
    'Ingl칠s',
    'Alem치n',
}

# Funciones
def init() -> None:
    """Inicializa variables de sesi칩n necesarias
    """
    if st.session_state.get("parsed_document", None) is None:
        st.session_state["parsed_document"] = False

def deactivate_flag() -> None:
    """desactiva la flag 'parsed_document' dando a entender que se ha parseado
    un documento, es decir que se ha cargado en el uploader
    """
    st.session_state['parsed_document'] = False

def activate_flag() -> None:
    """desactiva la flag 'parsed_document' dando a entender que se ha parseado
    un documento, es decir que se ha cargado en el uploader
    """
    st.session_state['parsed_document'] = True

def reset_all() -> None:
    """Desactiva la flag y borra la ruta xml completa
    Borra toda la sesi칩n
    """
    deactivate_flag()
    delete_xml_path()
    st.session_state.clear()

def save_in_session(keys:list, values:list) -> None:
    """Guarda en sesi칩n las listas de textos extraidos y los elementos

    Parameters
    ----------
    keys : list
        Lista con los nombres de las variables a guardar
    values : list
        Lista con los valores de las variables a guardar
    """
    if len(keys) != len(values):
        raise ValueError(f"keys y values deben tener la misma longitud: {len(keys)} != {len(values)}")
    for k, v in zip(keys,values):
        st.session_state[k] = v

def accumulate_in_session(keys:list, values:list[int|float]) -> None:
    """Acumula los valores pasados. Solo v치lido para n칰meros

    Parameters
    ----------
    keys : list
        lista de las keys a acumular
    values : list[int|float]
        valores a acumular
    """
    if len(keys) != len(values):
        raise ValueError(f"keys y values deben tener la misma longitud: {len(keys)} != {len(values)}")
    for k, v in zip(keys,values):
        if not isinstance(v, (int, float)):
            raise TypeError(f"S칩lo v치lidos int o float, no {type(v)}.")
        st.session_state[k] = st.session_state.get(k, 0) + v


def main():
    # Configuraci칩n de la app
    st.set_page_config(
    page_title=f"TrueForm Translator",
    page_icon="游늼",
    layout="wide",
    initial_sidebar_state="auto",
    )
    # Cargamos variables de entorno
    load_dotenv()
    # inicializamos session state
    init()
    # Titulo
    texto("TrueForm Translator", font_family='Rubik Doodle Shadow', font_size=60, centrar=True)
    # Descripci칩n
    texto("Traduce tus documentos Word a un idioma de tu elecci칩n.", font_family='Dancing Script', centrar=True)
    a침adir_salto()
    # inputs
    col1, col2 = st.columns(2)
    with col1:
        texto("Introduce el idioma al que traducir", font_family='Dancing Script', font_size=20, centrar=True)
        idioma = st.selectbox("idioma", options=LISTA_IDIOMAS, label_visibility="hidden")
    with col2:
        # KEY de OpenAI
        texto("Introduce tu clave", font_family='Dancing Script', font_size=20, centrar=True)
        openai_key = st.text_input("openai_key", label_visibility="hidden", help="Clave de OpenAI")
    a침adir_salto()
    # Cargar el documento
    texto("Carga tu documento Word", font_family='Dancing Script', font_size=20, centrar=True)
    documento = st.file_uploader("documento", label_visibility="hidden", type=["docx"], on_change=reset_all)
    if documento and not st.session_state.get('parsed_document'):
        # TODO Meter toda la pipeline en una funci칩n cuando est칠 terminada
        # Creamos la barra de progreso
        my_bar = st.progress(0)
        t_wait = 0.2
        # Descomprimimos el documento
        my_bar.progress(0.25, 'Descomprimiendo el documento...')
        extract_xml(BytesIO(documento.read()))
        time.sleep(t_wait)
        # Extraemos los textos del document.xml y sus elementos para poder modificar
        my_bar.progress(0.5, 'Extrayendo los textos...')
        text, element_list = get_text_elements()
        num_words = get_num_words(text)
        time.sleep(t_wait)     
        # Sacamos el idioma del texto
        my_bar.progress(0.75, 'Identificando el idioma del documento...')
        idioma_es, idioma_en = get_language(text)
        time.sleep(t_wait)
        # Sacamos el tema del documento
        my_bar.progress(0.9, 'Identificando la tem치tica del documento...')
        topic:TopicResponse = get_topic(text, idioma_es, documento.name)
        # Guardamos todo en sesi칩n
        my_bar.progress(1, 'Guardando en sesi칩n...')
        save_in_session(['text', 'elements_list', 'idioma_es', 'idioma_en', 'tematica',
                            'num_words'], 
                        [text, element_list, idioma_es, idioma_en, topic.response,
                            num_words])
        # Acumulamos los costes
        accumulate_in_session(['total_cost'], [topic.total_cost])
        time.sleep(t_wait)
        my_bar.empty()
        # Activamos la flag para indicar que se ha cargado archivo correctamente
        activate_flag()
        

    # TODO Mostrara aqui caracteristicas del documento: n칰mero de palabras por ejemplo y coste estimado de la traducci칩n
    a침adir_salto()
    # Bot칩n para traducir
    traducir = st.button(label="Traducir", use_container_width=True)

    st.session_state

    # Footer
    footer(2024, licencia=True)


if __name__ == '__main__':
    main()